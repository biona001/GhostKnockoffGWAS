var documenterSearchIndex = {"docs":
[{"location":"man/examples/#Detailed-Example","page":"Tutorial","title":"Detailed Example","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"This page collect examples of running the ghost knockoff pipeline. We will cover topics such as installation, examining input data, running the software, and interpreting the output. ","category":"page"},{"location":"man/examples/#Step-1:-Download-pre-processed-LD-files-and-binary-executable","page":"Tutorial","title":"Step 1: Download pre-processed LD files and binary executable","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"Proceed to the Downloads page and download (1) the software as well as (2) a pre-processed knockoff dataset suitable for your analysis. ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"After downloading the software and LD data, e.g. app_linux_x86.tar.gz and EUR.zip, unzip the files in linux command line via:","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"tar -xvzf app_linux_x86.tar.gz\nunzip EUR.zip # decompresses to ~8.7GB","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"This should create 2 folders app_linux_x86/ and EUR/ in the current directory. The executable is located inside app_linux_x86/bin/GhostKnockoffGWAS. We recommend adding the folder containing the GhostKnockoffGWAS executable to PATH for easier access.","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"warning: Warning\nDo NOT modify the contents in unzipped folders! ","category":"page"},{"location":"man/examples/#Step-2:-Prepare-a-valid-Z-score-file","page":"Tutorial","title":"Step 2: Prepare a valid Z score file","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"One needs a valid Z score file as input. ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"If you would like to follow along with this tutorial, feel free to download this test data example_zfile.txt (17MB). The first few rows is","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"CHR\tPOS\tREF\tALT\tZ\n7\t27916\tT\tC\t1.82946485242\n7\t30580\tC\tT\t0.877343668618\n7\t30581\tA\tT\t0.876791309991\n7\t31273\tG\tC\t-0.567289962351949\n7\t31439\tT\tA\t-0.907002943915131\n7\t31627\tA\tC\t0.577058407641\n7\t32858\tC\tT\t1.80586134742\n7\t33482\tT\tG\t0.47877317796\n7\t34215\tT\tC\t-0.711135940901","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"The first row is a header row which includes CHR, POS, REF, ALT, Z. Other columns will be ignored. \nEach row is a different SNP and each column is separated by a tab (i.e. \\t character) or a comma","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"In this example","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"The POS field corresponds to hg38 positions. GhostKnockoffGWAS requires the position to be either hg19 or hg38.\nThe sample size used for generating this data is 506200. Thus one should specify --N 506200.","category":"page"},{"location":"man/examples/#Step-3:-Running-the-analysis","page":"Tutorial","title":"Step 3: Running the analysis","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"To see a list of available arguments, execute GhostKnockoffGWAS --help. ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"To run the example analysis, run the following in the terminal","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"GhostKnockoffGWAS --zfile example_zfile.txt --LD-files EUR --N 506200 --genome-build 38 --out example_output","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"Here is the expected output:","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"Welcome to GhostKnockoffGWAS analysis!\nYou have specified the following options:\nzfile           = /scratch/users/bbchu/GhostKnockoffGWAS/data/example_zfile.txt\nLD_files        = /scratch/users/bbchu/GhostKnockoffGWAS/data/EUR\nN (sample size) = 506200\nhg_build        = 38\noutdir          = /scratch/users/bbchu/GhostKnockoffGWAS/data/\noutfile         = /scratch/users/bbchu/GhostKnockoffGWAS/data/example_output\nseed            = 2023\nverbose         = true\nrandom_shuffle  = true\nskip_shrinkage_check = false\n\ncount_matchable_snps processed chr 7, cumulative SNPs = 35855\nregion 1 / 99 (f = LD_start100196651_end101199252.h5): chr 7, nz beta = 9, nsnps = 306, shrinkage = 0.1909\nregion 2 / 99 (f = LD_start101199253_end103197509.h5): chr 7, nz beta = 11, nsnps = 332, shrinkage = 0.0346\nregion 3 / 99 (f = LD_start103197510_end104159524.h5): chr 7, nz beta = 12, nsnps = 215, shrinkage = 0.0458\nregion 4 / 99 (f = LD_start104159525_end105682904.h5): chr 7, nz beta = 10, nsnps = 358, shrinkage = 0.0012\nregion 5 / 99 (f = LD_start105682905_end107780177.h5): chr 7, nz beta = 18, nsnps = 532, shrinkage = 0.0034\n...<some output truncated>\n\nMatched 35855 SNPs with Z-scores to the reference panel\nMean LD shrinkage = 0.020501422972314207.\nDone! Result saved to /scratch/users/bbchu/GhostKnockoffGWAS/data/example_output. \nOverall runtime = 34.12649257 seconds, with \n   1.456621308 seconds spent on reading the Z score file\n   32.669871262 seconds spent on doing the analysis","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"Explanation for intermediate outputs:","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"GhostKnockoffGWAS first prints the user-specified parameters in the analysis. Verify that they are correct.\nNext we print the output of count_matchable_snps. It is essentially matching user supplied Z scores to the pre-computed knockoff data and counting how many SNPs can be matched. This information will be used to quantify the level shrinkage in Lasso regression. \nThen for each region, it will try to analyze the genome in quasi-independent regions, e.g. ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"region 1 / 99 (f = LD_start100196651_end101199252.h5): chr 7, nz beta = 9, nsnps = 306, shrinkage = 0.1909\nregion 2 / 99 (f = LD_start101199253_end103197509.h5): chr 7, nz beta = 11, nsnps = 332, shrinkage = 0.0346\nregion 3 / 99 (f = LD_start103197510_end104159524.h5): chr 7, nz beta = 12, nsnps = 215, shrinkage = 0.0458\n...","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"Here there are 99 regions in chromosome 7. For each region it prints the number of non-zero beta estimated in that region, the number of Z-scores that are present in that region, and finally the level of shrinkage. The shrinkage level is a number between 0 and 1. It quantifies how well the correlation matrices used in the analysis approximates the LD structure for the original GWAS study under the null (z = 0), see SuSiE paper equation 24 for details.\nFinally, the program concludes by printing the number of Z scores successfully matched, the output path, as well as a rough estimate of runtime. In this simple example, the analysis finished in roughly half a minute. ","category":"page"},{"location":"man/examples/#Step-4:-Interpreting-the-result","page":"Tutorial","title":"Step 4: Interpreting the result","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"If you are following along, GhostKnockoffGWAS should have produced 2 outputs","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"example_output_summary.txt\nexample_output.txt","category":"page"},{"location":"man/examples/#example_output_summary.txt","page":"Tutorial","title":"example_output_summary.txt","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"This file contains broad summary of the analysis, as shown below","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"target_fdr_0.01_num_selected,0\ntarget_fdr_0.05_num_selected,10\ntarget_fdr_0.1_num_selected,15\ntarget_fdr_0.2_num_selected,25\nm,5\nnregions,99\nnsnps,35855\nlasso_lambda,0.003807185801078654\nmean_LD_shrinkage,0.020501422972314207\nimport_time,11.890378966000004\nsample_knockoff_time,7.483832024999999\nghostbasil_time,0.7074100039999999\nknockoff_filter_time,6.180893948\ntotal_time,26.47797393798828\nsample_knockoff_time_t21,2.7361857229999993\nsample_knockoff_time_t22,1.532605566\nsample_knockoff_time_t23,0.81481418\nsample_knockoff_time_t24,2.3322181589999995","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"The first 4 rows indicate the number of discovered SNPs according to GhostKnockoffGWAS, for different target FDR levels. For example, when target textFDR = 01, there are 15 significant SNPs whose knockoff q-value is below 0.1. If these SNPs reside in different groups, then according to the knockoff procedure, these discoveries are conditionally independent. Later in step 5, we will apply a post-processing step to further count the number of independent discoveries as determined by the physical distance between these SNPs. \nThe next few rows contain parameters used in the analysis, as well as timing results. ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"tip: Tip\nOne should always check the value of mean_LD_shrinkage, here it is 002050. As discussed above, this value quantifies how well the correlation matrices used in the analysis approximates the LD structure for the original GWAS study. A value close to 0 is good, while larger values indicate deviation. GhostKnokcoffGWAS automatically terminates when this value exceeds a certain threshold.","category":"page"},{"location":"man/examples/#example_output.txt","page":"Tutorial","title":"example_output.txt","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"This is a comma-separated file that contains the full knockoff analysis output. The first 5 rows are shown:","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"$ head -5 example_output.txt\nrsid,AF,chr,ref,alt,pos_hg19,pos_hg38,group,zscores,lasso_beta,kappa,tau,W,qvals,pvals,selected_fdr0.01,selected_fdr0.05,selected_fdr0.1,selected_fdr0.2\nrs4535687,0.15927,7,G,C,41892,41892,chr7_start16161_end972751_group1_0,-1.17940334810126,0.0,0,0.0,0.0,1.0,0.23823760256835697,0,0,0,0\nrs62429406,0.031058,7,T,G,43748,43748,chr7_start16161_end972751_group2_0,0.636126444862832,0.0,0,0.0,0.0,1.0,0.5246940103826294,0,0,0,0\nrs117163387,0.034958,7,C,T,43961,43961,chr7_start16161_end972751_group3_0,-0.548757491205702,0.0,0,0.0,0.0,1.0,0.5831718861307663,0,0,0,0\nrs4247525,0.040199,7,T,C,44167,44167,chr7_start16161_end972751_group4_0,0.463442453535633,0.0,0,0.0,0.0,1.0,0.6430472544316368,0,0,0,0","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"The first row is a header row. Each proceeding row corresponds to a SNP that was used in the analysis. ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"rsid,AF,chr,ref,alt,pos_hg19,pos_hg38 is the SNP ID, alternate allele frequency, reference allele, alternate allele, basepair position in HG19 coordinates, and basepair position in HG38 coordinates.\ngroup column: defines group membership. Note that in GhostKnockoffGWAS, false discovery rate (FDR) is guaranteed at the group level, that is, the expected number of falsely discovered groups is less than the target FDR level.\nzscores: This is the user-provided Z-scores.\nlasso_beta: This is the Lasso's estimated effect size for each SNP conditional on the knockoffs. \nkappa,tau,W: these are knockoff statistics computed from the analysis, please refer to our paper for more detail. \nqvals: This is the knockoff q-values, which is the minimum target FDR for a given variable to be selected, i.e. for a target FDR level alpha, all variants with qvals le alpha is selected. \npvals: This is the p-value obtained by back-transforming the input Z-scores\nselected_fdrα columns: these inform whether the variable is selected when target FDR is alpha. ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"note: Note\nSometimes it is useful to determine the number of conditionally independent discoveries according to the knockoff procedure. In this case, one should count the number of unique groups that contains the discovered SNPs. In this example, when target FDR is 10, there are 15 SNPs with knockoff q-values less than 0.1, and they reside in 11 unique groups. Thus, the knockoff procedure claims there are at least 11 unique (conditionally-independent) causal variables. ","category":"page"},{"location":"man/examples/#Step-5:-Generating-Manhattan-plots","page":"Tutorial","title":"Step 5: Generating Manhattan plots","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"We can generate Manhattan plots by running this R script in the terminal (this requires the R packages data.table, plyr, dplyr, CMplot). Usage:","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"$ Rscript --vanilla manhattan.R arg1 arg2 arg3 arg4","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"arg1: Main output file from GhostKnockoffGWAS\narg2: Where output Manhattan plots should be stored (a . indicates store in current directory)\narg3: Output filename (without extensions) to be used for both plots, e.g. phenotype name\narg4: Target FDR in percentage","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"For example, ","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"$ Rscript --vanilla manhattan.R example_output.txt . example_plot 0.1","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"This produced the following plots","category":"page"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"(Image: knockoff_manhattan) (Image: marginal_manhattan)","category":"page"},{"location":"man/examples/#Explanation:","page":"Tutorial","title":"Explanation:","text":"","category":"section"},{"location":"man/examples/","page":"Tutorial","title":"Tutorial","text":"The knockoff plot displays the knockoff W values on the y-axis, one dot for each SNP. The most significant SNP within a 1Mb region is labeled and colored with purple. Light blue dots are knockoff discoveries that are within 1Mb distance to another more significant SNP. Careful readers may recall that in the summary file (shown in step 4), GhostKnockoffGWAS discovered 15 SNPs which falls within 11 unique groups, but here only 9 SNPs were labelled. This is because some discoveries are too close to each other. In this example, only 9 among 15 SNPs are physically greater than 1Mb apart. This immediate begs the question of how many discoveries one should report. Our papers typically report the number of discoveries physically >1Mb apart (i.e. 9 discoveries in this case), but please note that there are in fact at least 11 conditionally independent discoveries according to the knockoff methodology.\nThe marginal plot is a standard Manhattan plot with the y-axis plotting the negative logged p-values. Similar to the knockoff plot, all dots above the dotted line are marginally significant and colored with light blue, while the most signicant SNP within 1Mb region is colored with purple. \nThe color bars beneath the x-axis displays chromosome density.","category":"page"},{"location":"man/documentation/#Command-line-documentation-and-usage-of-GhostKnockoffGWAS","page":"Documentation","title":"Command-line documentation and usage of GhostKnockoffGWAS","text":"","category":"section"},{"location":"man/documentation/#Usage","page":"Documentation","title":"Usage","text":"","category":"section"},{"location":"man/documentation/","page":"Documentation","title":"Documentation","text":"Simple run","category":"page"},{"location":"man/documentation/","page":"Documentation","title":"Documentation","text":"GhostKnockoffGWAS --zfile example_zfile.txt --LD-files EUR --N 506200 --genome-build 38 --out example_output","category":"page"},{"location":"man/documentation/#Required-inputs","page":"Documentation","title":"Required inputs","text":"","category":"section"},{"location":"man/documentation/","page":"Documentation","title":"Documentation","text":"Option name Argument Description\n--zfile String Input file containing Z-scores as well as CHR/POS/REF/ALT. See Acceptable Z-score files for detailed requirement on this file.\n--LD-files String Input directory to the pre-processed LD files. Most users downloads this from the Downloads Page\n--N Int Sample size for target (original) study\n--genome-build Int The human genome build used for SNP positions in zfile (this value must be 19 or 38)\n--out String Output file name (without extensions)","category":"page"},{"location":"man/documentation/#Optional-inputs","page":"Documentation","title":"Optional inputs","text":"","category":"section"},{"location":"man/documentation/","page":"Documentation","title":"Documentation","text":"Option name Argument Description\n--CHR Int The column in zfile that will be read as chromosome number (note this must be an integer, e.g. chr22, X, chrX, ...etc are NOT acceptable). [If not specified, we will search for a column with header CHR]\n--POS Int The column in zfile that will be read as SNP position . [If not specified, we will search for a column with header POS]\n--REF Int The column in zfile that will be read as REF (non-effectiv) allele . [If not specified, we will search for a column with header REF]\n--ALT Int The column in zfile that will be read as ALT (effective allele). [If not specified, we will search for a column with header REF]\n--Z Int The column in zfile that will be read as Z-scores. [If not specified, we will search for a column with header Z]\n--seed Int Sets the random seed [If not specified, defaults to 2023]\n--verbose Bool Whether to print intermediate messages [If not specified, defaults to true]\n--random-shuffle Bool Whether to randomly permute the order of Z-scores and their knockoffs to adjust for potential ordering bias. [If not specified, defaults to true]\n--skip-shrinkage-check Bool Whether to allow Knockoff analysis to proceed even with large (>0.25) LD shrinkages [If not specified, defaults to false]","category":"page"},{"location":"man/documentation/#Output-format","page":"Documentation","title":"Output format","text":"","category":"section"},{"location":"man/documentation/","page":"Documentation","title":"Documentation","text":"A summary file, e.g. example_output_summary.txt. This file contains broad summary of the analysis\nA comma-separated file, e.g. example_output.txt. This file contains the full GhostKnockoffGWAS output, one SNP in each row.\n(optional) Manhattan plots, which can be generated by following step 5 of detailed example.","category":"page"},{"location":"man/documentation/","page":"Documentation","title":"Documentation","text":"For a more detailed explanation on these 2 files, see Tutorial. ","category":"page"},{"location":"man/download/#Downloads-page","page":"Downloads","title":"Downloads page","text":"","category":"section"},{"location":"man/download/","page":"Downloads","title":"Downloads","text":"Here is the main downloads page. New software and pre-processed knockoff data will be released here.","category":"page"},{"location":"man/download/#Software","page":"Downloads","title":"Software","text":"","category":"section"},{"location":"man/download/","page":"Downloads","title":"Downloads","text":"Operating System v0.1.1 (March 4th, 2024)\nLinux 64-bit Download","category":"page"},{"location":"man/download/","page":"Downloads","title":"Downloads","text":"After unzipping, the executable will be located inside bin/GhostKnockoffGWAS. We recommend adding the folder containing the GhostKnockoffGWAS executable to PATH for easier access.","category":"page"},{"location":"man/download/#Pre-processed-LD-files","page":"Downloads","title":"Pre-processed LD files","text":"","category":"section"},{"location":"man/download/","page":"Downloads","title":"Downloads","text":"Population Link Number of SNPs Description\nEUR (Europeans) download (7.5GB) 650826 See Note 1\nASN (East Asians) TBD  \nAFR (Africans) TBD  \nAMR (Admixed Americans) TBD  ","category":"page"},{"location":"man/download/","page":"Downloads","title":"Downloads","text":"Note 1: This file contain pre-processed LD files generated from the typed SNPs of the EUR cohort from the Pan-UKB panel. The quasi-independent regions were obtained by directly adapting the output of ldetect","category":"page"},{"location":"man/developer/#Developer-documentation","page":"Developer documentation","title":"Developer documentation","text":"","category":"section"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"This is for advanced users who wish to build customized knockoff analysis pipelines. Currently, customization is not easy, but it is possible in principle at 2 levels: ","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"Processing LD panels\nSpecifying which LD panel to use\nDefining quasi-independent regions and groups\nSolving the knockoff (convex) optimization problem\nSaving the result in a easy-to-read format, which will be read in step 2\nGhost Knockoff sampling and high dimensional Lasso regression\nRead pre-computed knockoff statistics from step 1\nSample Ghost Knockoffs\nFit a pseudo-lasso problem\nApplying the knockoff filter","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"A full example is provided in 3 separate jupyter notebooks: part 0, part 1, and part 2. If you need assistance on any of these steps, feel free to reach out to us. ","category":"page"},{"location":"man/developer/#1.-Processing-LD-panels","page":"Developer documentation","title":"1. Processing LD panels","text":"","category":"section"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"This section gives a high-level overview up to part 1 of the GhostKnockoff pipeline (processing of LD files to be used as input to GhostKnockoffGWAS). ","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"Processing of LD panels (including downloading and importing the data matrices) is carried out by EasyLD.jl. This package should make it easy to import a region of the LD matrix into memory in Julia. \nTo partition the extremely large LD matrix into manageable pieces, we directly adopted the output of ldetect for which AFR (african), ASN (east Asians), and EUR (european) results are already available (position coordinates are given in HG19). For the EUR panel, the autosomes are partitioned into 1703 \"quasi-independent\" regions, see Figure S2 of this paper for summaries. \nKnockoff optimization problem was carried out by Knockoffs.jl. In particular, we defined groups via average-linkage hierarchical clustering, chose group-key variants within each group via Algorithm A1 in the paper with threshold value c=05, and employed the maximum-entropy group-knockoff solver.","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"For details, please see section 5.1 and 5.2 of this paper. Note that the precomputed knockoff statistics includes everything up to this point. ","category":"page"},{"location":"man/developer/#2.-Ghost-Knockoff-sampling-and-high-dimensional-Lasso-regression","page":"Developer documentation","title":"2. Ghost Knockoff sampling and high dimensional Lasso regression","text":"","category":"section"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"Over 1703 quasi-independent blocks, we have assembled","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"beginaligned\n    Sigma =\n    beginbmatrix\n        Sigma_1   \n         ddots  \n          Sigma_1703\n    endbmatrix quad\n    S = \n    beginbmatrix\n        S_1   \n         ddots  \n          S_1703\n    endbmatrix quad\n    S_i = \n    beginbmatrix\n        S_i1   \n         ddots  \n          S_iG_i\n    endbmatrix\nendaligned","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"where Sigma_i are LD matrices obtained from the Pan-UKBB panel and S_i is the group-block-diagonal matrices obtained by solving the knockoff optimization problem. Given a Z-score vector z, we can compute r = frac1sqrtn z, and ghostbasil will solve the following optimization problem with lambda ge 0 p_i ge 0, and 0 le alpha le 1.","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"beginaligned\n    min frac12beta^t A beta - beta^tr + lambdasum_ip_ileft(alphabeta_i + frac1-alpha2beta_i^2right)\nendaligned","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"In GhostKnockoffGWAS, we set alpha = 1 (i.e. a Lasso problem) and p_i = 1 for all i. A = frac1nXtildeXXtildeX and beta contains the effect size for both original variables and their knockoffs. ","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"To solve this problem, we leverage the fact that Lasso's objective is seprable over the blocks: as long as we can find a lambda sequence to be used for all blocks, we can fit each block separately. Since the max lambda is only related to the marginal correlation between each feature and y, and the knockoffs are exchangeable to the original features, we can use the original genome-wide Z-scores to compute the lambda sequence. ","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"Thus, for each block i in 11703, we will call ghostbasil(Bi, r) where","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"beginaligned\n    B_i = textBlockGroupGhostMatrix(C_i S_i m+1)\n    C_i = Sigma_i - S_i\nendaligned  ","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"Note that, since we use representative variant approach, S_i is generally a dense matrix. To input a dense matrix, we use Jame's function BlockGroupGhostMatrix with a single block. ","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"beginaligned\n    B_i = textBlockGroupGhostMatrix(C_i S_i m+1) = \n    beginbmatrix\n        C_i+S_i  C_i    C_i\n        C_i  C_i+S_i    \n        vdots   ddots  vdots\n        C_i  C_i   C_i + S_i\n    endbmatrix\nendaligned","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"with the understanding that B_i is the covariance matrix for (Z tildeZ_1tildeZ_m)","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"beginaligned\n    B_i = \n    beginbmatrix\n        Sigma_i  Sigma_i-S_i    Sigma_i-S_i\n        Sigma_i-S_i  Sigma_i    \n        vdots   ddots  vdots\n        Sigma_i-S_i  Sigma_i-S_i   Sigma_i\n    endbmatrix = \n    beginbmatrix\n        C_i+S_i  C_i    C_i\n        C_i  C_i+S_i    \n        vdots   ddots  vdots\n        C_i  C_i   C_i + S_i\n    endbmatrix\nendaligned","category":"page"},{"location":"man/developer/","page":"Developer documentation","title":"Developer documentation","text":"where C_i = Sigma_i - S_i. In Julia, this functionality is supported via the Ghostbasil.jl package. ","category":"page"},{"location":"man/intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"This package conducts knockoff-based inference to perform genome-wide conditional independent tests based on GWAS summary statistics. The methodology is described in the following papers","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"Chen Z, He Z, Chu BB, Gu J, Morrison T, Sabatti C, Candes C. \"Controlled Variable Selection from Summary Statistics Only? A Solution via GhostKnockoffs and Penalized Regression\", arXiv preprint arXiv:2402.12724 (2024); doi: https://doi.org/10.48550/arXiv.2402.12724","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"Chu BB, Gu J, Chen Z, Morrison T, Candes E, He Z, Sabatti C. (2023). Second-order group knockoffs with applications to GWAS. arXiv preprint arXiv:2310.15069; doi: https://doi.org/10.48550/arXiv.2310.15069","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"He Z, Chu BB, Yang J, Gu J, Chen Z, Liu L, Morrison T, Bellow M, Qi X, Hejazi N, Mathur M, Le Guen Y, Tang H, Hastie T, Ionita-laza I, Sabatti C, Candes C. \"In silico identification of putative causal genetic variants\", bioRxiv, 2024.02.28.582621; doi: https://doi.org/10.1101/2024.02.28.582621","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"The main working assumption is that we do not have access to individual level genotype or phenotype data. Rather, for each SNP, we have its Z-scores with respect to some phenotype from a GWAS, and access to LD (linkage disequilibrium) data. The user is expected supply the Z-scores, while we supply the LD data in addition to some pre-computed knockoff data.","category":"page"},{"location":"man/intro/#Q:-When-should-I-use-GhostKnockoffGWAS?","page":"Introduction","title":"Q: When should I use GhostKnockoffGWAS?","text":"","category":"section"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"Answer: If you already conducted a GWAS, have an output file that includes Z scores (or equivalent) for each SNP, and there exist pre-processed LD files in downloads page in which the listed population matches the ethnicities for your original GWAS study.","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"If your original study had little (e.g. <5) discoveries, then GhostKnockoffGWAS may not give better results. The methodology works better for more polygenic traits. \nIf your study subjects are somewhat admixed, one can try using the most suitable LD files, and check how much deviation there are from the LD files by examining the LD_shrinkage parameter in the output of GhostKnockoffGWAS, see this FAQ.\nIf instead you have individual level genotypes, you should run a GWAS using standard tools (e.g. PLINK, BOLT, GCTA, SAIGE, GEMMA, ...etc) before running GhostKnockoffGWAS. ","category":"page"},{"location":"man/intro/#Quick-Start","page":"Introduction","title":"Quick Start","text":"","category":"section"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"Most users are expected to follow this workflow. Detailed explanations for each step is available in Tutorial.","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"Go to Download Page and download (1) the software and (2) the pre-processed LD files. For example,\n wget https://github.com/biona001/GhostKnockoffGWAS/releases/download/v0.1.0/app_linux_x86.tar.gz\n wget https://zenodo.org/records/10433663/files/EUR.zip\nUnzip them both:\n tar -xvzf app_linux_x86.tar.gz\n unzip EUR.zip  # decompresses to ~8.7GB\nPrepare your input Z score file into accepted format, see Acceptable Z-scores. A toy example can be downloaded by:\n wget https://github.com/biona001/GhostKnockoffGWAS/blob/main/data/example_zfile.txt\nRun the executable\n app_linux_x86/bin/GhostKnockoffGWAS --zfile example_zfile.txt --LD-files EUR --N 506200 --genome-build 38 --out example_output\nMake Manhattan plot with this R script. See step 5 in Tutorial for more details. ","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"Those familiar with the Julia programming language can use GhostKnockoffGWAS as a regular julia package, see usage within Julia.","category":"page"},{"location":"man/intro/#More-general-knockoff-constructions","page":"Introduction","title":"More general knockoff constructions","text":"","category":"section"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"If you are interested in the broader knockoff methodology, not necessarily based on GWAS summary statistics, see for example","category":"page"},{"location":"man/intro/","page":"Introduction","title":"Introduction","text":"Wikipedia page\nThe main knockoff page\nknockoffgwas\nKnockoffs.jl\nknockpy\nknockoff-filter","category":"page"},{"location":"man/julia/#Usage-within-Julia","page":"Usage within Julia","title":"Usage within Julia","text":"","category":"section"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"GhostKnockoffGWAS is a regular Julia package, which can be used directly within Julia for greater flexibility. To install it, execute the following in Julia","category":"page"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"using Pkg\nPkg.add(url=\"https://github.com/biona001/ghostbasil_jll.jl\")\nPkg.add(url=\"https://github.com/biona001/Ghostbasil.jl\")\nPkg.add(url=\"https://github.com/biona001/GhostKnockoffGWAS\")","category":"page"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"warning: Warning\nThis package currently only works on Linux machines with Julia 1.8.x, 1.9.x, and 1.10.0. If you need it to work on a different Julia version, let us know by filing an issue on Github. ","category":"page"},{"location":"man/julia/#Usage-example","page":"Usage within Julia","title":"Usage example","text":"","category":"section"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"The following example performs summary-statistics GWAS under the GhostKnockoff framework.","category":"page"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"using GhostKnockoffGWAS\n\n# file paths and directories\nLD_files = \"/home/groups/sabatti/.julia/dev/GhostKnockoffGWAS/data/EUR\"\nzfile = \"/home/groups/sabatti/.julia/dev/GhostKnockoffGWAS/data/AD_Zscores_Meta_modified.txt\"\noutdir = \"/home/groups/sabatti/.julia/dev/GhostKnockoffGWAS/data\"\n\n# specify sample size and human genome build\nN = 506200\nhg_build = 38\n\n# read Z-scores using built-in function read_zscores\nz, chr, pos, effect_allele, non_effect_allele = GhostKnockoffGWAS.read_zscores(zfile)\n\n# run analysis\n@time ghostknockoffgwas(LD_files, z, chr, pos, effect_allele, \n    non_effect_allele, N, hg_build, outdir, outname=\"test_alzheimers_meta\")","category":"page"},{"location":"man/julia/#Function-API","page":"Usage within Julia","title":"Function API","text":"","category":"section"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"ghostknockoffgwas\nread_zscores","category":"page"},{"location":"man/julia/#GhostKnockoffGWAS.ghostknockoffgwas","page":"Usage within Julia","title":"GhostKnockoffGWAS.ghostknockoffgwas","text":"ghostknockoffgwas(LD_files::String, z::Vector{Float64}, chr::Vector{Int}, \n    effect_allele::Vector{String}, non_effect_allele::Vector{String}, N::Int,\n    hg_build::Int, outdir::String; [outname=\"result\"], [seed=2023], \n    [target_chrs=sort!(unique(chr))], [A_scaling_factor = 0.01], \n    [kappa_lasso=0.6], [LD_shrinkage=false], \n    [target_fdrs=[0.01, 0.05, 0.1, 0.2]], [verbose=true], \n    [skip_shrinkage_check=false])\n\nRuns the main GhostKnockoffGWAS pipeline on the Z scores in z using  pre-computed knockoff data in LD_files. \n\nInputs\n\nLD_files: Directory that stores pre-computed knockoff results\nz: Vector of Z scores\nchr: Chromosome of each Z score (cannot be X/Y/M chromosomes)\npos: Position of each Z score (specify hg build with hg_build)\neffect_allele: Effect allele of Z score (i.e. ALT)\nnon_effect_allele: Non-effect allele of Z score (i.e. REF)\nN: sample size of original study\nhg_build: Human genome build (must be 19 or 38)\noutdir: output directory, which must exist. We will output 2 files, one    containing the full analysis results, as well as a summary file. \n\nOptional inputs\n\nseed: Random seed for reproducibility (default = 2023)\ntarget_chrs: Target chromosomes to analyze. For example, one can specify   target_chrs = 22 to only analyze 1 chromosome, or target_chrs = [1, 2]   to only analyze 2 chromosomes (default = sort!(unique(chr))).\nA_scaling_factor: The scaling factor for A = [X X̃]'*[X X̃] for improving   numerical stability. Scaling proceeds by adding A_scaling_factor*I to A   (default = 0.01). \nkappa_lasso: A constant between 0 and 1 for tuning Lasso's lambda path.    Larger value forces earlier exit in Lasso lambda path, resulting in stronger    shrinkage. See the \"lasso-min\" method of \"Controlled Variable Selection from   Summary Statistics Only? A Solution via GhostKnockoffs and Penalized    Regression\" by Chen et al (default 0.6).\nLD_shrinkage: Whether to perform shrinkage to LD and S matrices following   method in SuSiE paper (i.e. eq 24 of \"Fine-mapping from summary data with    the “Sum of Single Effects” model\" by Zou et al). If false, we will still   compute the shrinkage level, but it will not be used to adjust the LD   matrices (default false). \ntarget_fdrs: Default target FDR levels (default = [0.01, 0.05, 0.1, 0.2])\nverbose: Whether to print progress and informative intermediate results (   default = true)\nskip_shrinkage_check: Forces a result output even if there is a high   estimated LD shrinkage by SuSiE's method (default = false)\n\nOutput\n\nBy default we output 2 files into outdir\n\nA knockoff statistics file where each SNP occupies a row and the columns include    various SNP attributes include rsid, AF, chr, pos, zscores...etc. The    columns selected_fdr_FDR indicates whether the variant was ultimately   selected under the false discovery rate threshold of FDR.\nA summary statistics file. The first dozens of rows print, for each false    discovery rate threshold FDR, the knockoff threshold τ̂ and the number of   groups that pass this threshold. The next couple of lines print some    parameters used in the knockoff analysis, as well as some timing results. \n\n\n\n\n\n","category":"function"},{"location":"man/julia/#GhostKnockoffGWAS.read_zscores","page":"Usage within Julia","title":"GhostKnockoffGWAS.read_zscores","text":"read_zscores(filepath::String)\n\nHelper function to read a Z-score file at filepath. This function is mainly  intended for Julia users running GhostKnockoffGWAS in the REPL.\n\nInput\n\nfilepath: Full file path to the Z-score file. First row must be a header   column with CHR, POS, REF, ALT, and Z. If the file contains these    information but has a different header name for them, use the optional input   arguments below. All other columns will be ignored.\n\nOptional inputs\n\nchr_col: An integer, specifying which column in filepath should be read as   CHR (by default we search for a header CHR)\npos_col: An integer, specifying which column in filepath should be read as    POS (by default we search for a header POS)\nref_col: An integer, specifying which column in filepath should be read as    REF (by default we search for a header REF)\nalt_col: An integer, specifying which column in filepath should be read as   ALT (by default we search for a header ALT)\nz_col: An integer, specifying which column in filepath should be read as Z   (by default we search for a header Z)\n\nOutput\n\nz: The Z scores stored in the Z column of filepath\nchr: The chromosome number stored in CHR column of filepath. Only integer   values are allowed.\npos: The position number stored in POS column of filepath.\neffect_allele: The allele stored in ALT column of filepath.\nnon_effect_allele: The allele stored in REF column of filepath.\n\n\n\n\n\n","category":"function"},{"location":"man/julia/#Compiling-GhostKnockoffGWAS","page":"Usage within Julia","title":"Compiling GhostKnockoffGWAS","text":"","category":"section"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"]add libcxxwrap_julia_jll (note: as of Feb 2024, libcxxwrap_julia_jll must be v0.11.x)\nMake sure GhostKnockoffGWAS is installed within Julia. \ndev the package via  julia  ]dev GhostKnockoffGWAS\ncompile using PackageCompiler.jl","category":"page"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"using PackageCompiler, GhostKnockoffGWAS\nsrc = normpath(pathof(GhostKnockoffGWAS), \"../..\")\ndes = normpath(pathof(GhostKnockoffGWAS), \"../../app_linux_x86\")\nprecompile_script = normpath(pathof(GhostKnockoffGWAS), \"../precompile.jl\")\n@time create_app(src, des, \n    include_lazy_artifacts=true, \n    force=true, \n    precompile_execution_file=precompile_script\n)","category":"page"},{"location":"man/julia/","page":"Usage within Julia","title":"Usage within Julia","text":"The last step takes 1-2 hours. ","category":"page"},{"location":"man/FAQ/#Common-questions-and-Answers","page":"FAQ","title":"Common questions and Answers","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"Here is a collection of common questions & answers. If you have a question not listed here, do not hesitate to open a new issue on Github. ","category":"page"},{"location":"man/FAQ/#How-do-I-obtain-Z-scores-from-p-values,-effect-sizes,-odds-ratios...etc?","page":"FAQ","title":"How do I obtain Z-scores from p-values, effect sizes, odds-ratios...etc?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"See the Notes on computing Z-scores section of this blog post","category":"page"},{"location":"man/FAQ/#Is-the-result-is-trustworthy?","page":"FAQ","title":"Is the result is trustworthy?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"Knockoff's FDR guarantees requires that the correlation matrices used in the analysis approximates the LD structure for the original GWAS study. Their consistency is measured by the mean_LD_shrinkage parameter in the summary output. This value lies between 0 and 1. Values close to 0 indicates good performance. Larger values (e.g. >0.1) indicates deviation. Very larger values (e.g. >0.25) will cause the program to hault and users should download a different set of precomputed knockoff data instead. See equation 24 of the SuSiE paper for details. ","category":"page"},{"location":"man/FAQ/#Expected-run-time?","page":"FAQ","title":"Expected run time?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"On roughly 0.6 million Z-scores, our software completed a GhostKnockoff analysis in roughly 15 minutes on a single 2.3GHz CPU. If your analysis is taking much longer than this, please see Q&A on software unexpectedly slow.","category":"page"},{"location":"man/FAQ/#Memory-requirement?","page":"FAQ","title":"Memory requirement?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"Our software requires ~9.1GB of RAM on an Alzheimer's Diseases anslysis with ~0.6 million SNPs. ","category":"page"},{"location":"man/FAQ/#Software-unexpectedly-slow?","page":"FAQ","title":"Software unexpectedly slow?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"Because the knockoff pipeline requires reading the pre-computed knockoff statistics sequentially into memory, both the downloaded software and data should be stored at a high speed (e.g. Lustre) file system. On most HPC clusters, one should store the data in the SCRATCH directory to run GhostKnockoffGWAS. ","category":"page"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"To check whether I/O is the bottleneck, one can check the CPU usage while GhostKnockoffGWAS is running. For example, one can examine CPU usage via the top or htop command. CPU usage should almost always be at 99% or above.  ","category":"page"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"For undiagnosed performance issues, please file a new issue. ","category":"page"},{"location":"man/FAQ/#Sex-chromosome-support?","page":"FAQ","title":"Sex chromosome support?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"We currently do not support X/Y/M chromosome analysis.","category":"page"},{"location":"man/FAQ/#When-will-non-European-LD-files-be-available?","page":"FAQ","title":"When will non-European LD files be available?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"We will release more pre-processed LD files for download, once we tested and verified the methodology against suitable datasets. Most likely, the first non-EUR release will be on African and East Asian populations. ","category":"page"},{"location":"man/FAQ/#Admixed-samples?","page":"FAQ","title":"Admixed samples?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"If your study subjects are somewhat admixed, one can try GhostKnockoffGWAS with the most suitable LD files, then check how much deviation there are by examining the LD_shrinkage parameter in the output of GhostKnockoffGWAS, see Is-the-result-is-trustworthy?.","category":"page"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"If your study subjects are extremely admixed, then it is unlikely that GhostKnockoffGWAS will return good results. The main difficulty in enabling analysis for admixed cohorts lies in pre-computing good LD files for admixed subjects. Computing required quantities on the fly is too computationally intensive. ","category":"page"},{"location":"man/FAQ/#How-do-I-specify-my-own-groups?","page":"FAQ","title":"How do I specify my own groups?","text":"","category":"section"},{"location":"man/FAQ/","page":"FAQ","title":"FAQ","text":"We will add this feature in the near future","category":"page"},{"location":"man/gallery/#Gallery","page":"Gallery","title":"Gallery","text":"","category":"section"},{"location":"man/gallery/","page":"Gallery","title":"Gallery","text":"We applied GhostKnockoffGWAS to 400+ phenotypes currated by Mike Gloudemans, available here. Below showcases some of these results, limiting the study population to EUR ancestry.","category":"page"},{"location":"man/gallery/","page":"Gallery","title":"Gallery","text":"...coming soon","category":"page"},{"location":"man/zfile/#Acceptable-Z-scores-file-format","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file format","text":"","category":"section"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"The Z score file should satisfy the following requirements:","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"It is a comma- or tab-separated text file (.gz compressed is acceptable)\nThe first row should be a header line, and every row after the first will be treated as a different SNP. \nBy default GhostKnockoffGWAS will search for column names CHR, POS, REF, ALT, and Z. Alternatively, you can specify which column should be used for each of these fields by providing the corresponding optional inputs, e.g. --CHR 6 tells GhostKnockoffGWAS to use column 6 as CHR. The ALT allele will be treated as the effect allele and REF be treated as non-effect allele. The POS (position) field of each variant must be from HG19 or HG38, which must be specified by the --genome-build argument. ","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"Here is a minimal example with 10 Z scores","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"CHR\tPOS\tREF\tALT\tZ\n17\t150509\tT\tTA\t1.08773561923134\n17\t151035\tT\tC\t0.703898767202681\n17\t151041\tG\tA\tNaN\n17\t151872\tT\tC\t-0.299877259561085\n17\t152087\tC\tT\t-0.371627135786605\n17\t152104\tG\tA\t-0.28387322965385\n17\t152248\tG\tA\t0.901618600934489\n17\t152427\tG\tA\t1.10987516000804\n17\t152771\tA\tG\t0.708492545266136","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"A toy example is example_zfile.txt (17MB).","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"tip: Tip\nMissing Z scores can be specified as NaN or as an empty cell. If you do not want a SNP to be considered in the analysis, you can change the its Z-score to NaN. CHR/POS/REF/ALT fields cannot have missing values.","category":"page"},{"location":"man/zfile/#Requirements-on-the-input-Z-scores","page":"Acceptable Z-scores file","title":"Requirements on the input Z-scores","text":"","category":"section"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"In our papers, Z-scores are defined by z = frac1sqrtNX^ty where X is the N times P standardized genotype matrix with N samples and P SNPs, y is the normalized n times 1 phenotype vector, and these Z-scores have N(0 1) distribution under the null. ","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"In practice, this paper shows that other association test statistics that are N(0 1) under the null also result in FDR control. This includes commonly used tests in genetic association studies such as:","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"generalized linear mixed effect model to account for sample relatedness\nsaddle point approximation for extreme case-control imbalance\nmeta-analysis that aggregates multiple studies.","category":"page"},{"location":"man/zfile/","page":"Acceptable Z-scores file","title":"Acceptable Z-scores file","text":"If you have p-values, effect sizes, odds ratios,...etc, converting them into Z score might be possible, for example by following the Notes on computing Z-scores of this blog post. ","category":"page"},{"location":"man/video/#Video-Tutorials","page":"Video Tutorials","title":"Video Tutorials","text":"","category":"section"},{"location":"man/video/","page":"Video Tutorials","title":"Video Tutorials","text":"Coming soon","category":"page"},{"location":"man/video/#Installation","page":"Video Tutorials","title":"Installation","text":"","category":"section"},{"location":"man/video/","page":"Video Tutorials","title":"Video Tutorials","text":"","category":"page"},{"location":"man/video/#Running-the-analysis","page":"Video Tutorials","title":"Running the analysis","text":"","category":"section"},{"location":"man/video/","page":"Video Tutorials","title":"Video Tutorials","text":"","category":"page"},{"location":"man/video/#Interpreting-the-result","page":"Video Tutorials","title":"Interpreting the result","text":"","category":"section"},{"location":"man/video/","page":"Video Tutorials","title":"Video Tutorials","text":"","category":"page"},{"location":"#GWAS-summary-statistics-analysis-via-Knockoff-filter","page":"Home","title":"GWAS summary statistics analysis via Knockoff-filter","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is package for performing knockoff-based analysis of GWAS summary statistics. The knockoff-filter finds conditionally independent discoveries while controlling the FDR (false discovery rate) to any specified level. ","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: cover)","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Warning\nThis package currently only works on Linux platforms with aarch64 or x86_64 CPUs. We plan to support mac (x86_64 and aarch64) in the near future, but not for windows. ","category":"page"}]
}
